import { generateObject, type LanguageModelV1 } from 'ai';

import { KnowledgeGraphSchema, type KnowledgeGraph } from './schema';

const systemPrompt = `
  You are a knowledge graph builder, use the supplied JSON schema to build a knowledge graph that is a complete and accurate representation of the content. You must only use the node types and edge types defined in the schema.

  Be comprehensive and include all mentions of people, organizations, technologies, products, concepts, etc. in the knowledge graph. Use as fine grained a granularity as possible and link to parents where applicable. For example, if a technology like "React" is mentioned, link it to the "JavaScript" technology and also the "Frontend" concept.
`;

export async function buildGraph(model: LanguageModelV1, input: string) {
  const { object } = await generateObject({
    model,
    messages: [
      {
        role: 'system',
        content: systemPrompt,
      },
      {
        role: 'user',
        content: input,
      },
    ],
    schema: KnowledgeGraphSchema,
  });

  return object;
}

/**
 * Validate that the graph generated by the LLM is valid (i.e. all nodes and edges exist).
 *
 * @param kg
 */
export function validateGraph(kg: Readonly<KnowledgeGraph>) {
  const nodeIds = new Set(kg.nodes.map((node) => node.id));

  for (const edge of kg.edges) {
    if (!nodeIds.has(edge.source)) {
      throw new Error(`Could not find source node with id ${edge.source}`);
    }

    if (!nodeIds.has(edge.target)) {
      throw new Error(`Could not find target node with id ${edge.target}`);
    }
  }
}
